{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.dfa43e906ffbb4da4024.hot-update.js","sources":["webpack:///./pages/projects.js"],"sourcesContent":["import anime from \"animejs\";\r\nimport React, { useReducer, useEffect, useRef } from \"react\";\r\nimport { ARROW_TYPE, KEYS_CODE, projects } from \"../config\";\r\n\r\nconst initialState = {\r\n  prevProjectIndex: 0,\r\n  currentProjectIndex: 0\r\n};\r\n\r\nconst ACTION = {\r\n  NEXT: \"next\",\r\n  PREV: \"prev\"\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case ACTION.NEXT:\r\n      return {\r\n        prevProjectIndex: state.currentProjectIndex,\r\n        currentProjectIndex: state.currentProjectIndex !== projects.length - 1\r\n          ? state.currentProjectIndex + 1\r\n          : 0\r\n      }\r\n    case ACTION.PREV:\r\n      return {\r\n        prevProjectIndex: state.currentProjectIndex,\r\n        currentProjectIndex: state.currentProjectIndex !== 0\r\n          ? state.currentProjectIndex - 1\r\n          : projects.length - 1\r\n      }\r\n    default:\r\n      throw new Error(`Undefined action: '${action.type}'`);\r\n  }\r\n}\r\n\r\nconst ProjectsPage = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const projectDescriptionRef = useRef();\r\n  const projectThumbnailRef = useRef();\r\n  const projectThumbnailImageRef = useRef();\r\n  const navigationRef = useRef();\r\n  const navigationButtonsRef = useRef();\r\n  const prevButtonRef = useRef();\r\n  const prevButtonSvgRef = useRef();\r\n  const nextButtonRef = useRef();\r\n  const nextButtonSvgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      animateProjectDescription();\r\n      animateProjectThumbnail();\r\n      animateNavigation();\r\n    }, 800);\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      anime.remove([\r\n        projectDescriptionRef.current,\r\n        projectThumbnailRef.current,\r\n        navigationRef.current,\r\n        navigationButtonsRef.current\r\n      ]);\r\n      clearTimeout(timeout);\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"reanimate\");\r\n    reAnimateProject();\r\n  }, [state]);\r\n\r\n  const handleKeyDown = e => {\r\n    switch (e.which) {\r\n      case KEYS_CODE.UP:\r\n      case KEYS_CODE.LEFT:\r\n        prevProject();\r\n        break;\r\n      case KEYS_CODE.DOWN:\r\n      case KEYS_CODE.RIGHT:\r\n        nextProject();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const prevProject = () => {\r\n    animateArrowsButton(ARROW_TYPE.PREV);\r\n    prevButtonRef.current.blur();\r\n    dispatch({ type: ACTION.PREV });\r\n  };\r\n\r\n  const nextProject = () => {\r\n    animateArrowsButton(ARROW_TYPE.NEXT);\r\n    nextButtonRef.current.blur();\r\n    dispatch({ type: ACTION.NEXT });\r\n  };\r\n\r\n  const reAnimateProject = () => {\r\n    anime.remove(projectDescriptionRef.current);\r\n    anime.remove(projectThumbnailImageRef.current);\r\n    animateProjectDescription();\r\n    animateProjectThumbnailImage();\r\n  };\r\n\r\n  const animateProjectThumbnail = () => {\r\n    anime({\r\n      targets: projectThumbnailRef.current,\r\n      translateX: [\"-101%\", 0],\r\n      easing: \"easeInOutQuad\",\r\n      duration: 1400\r\n    });\r\n  };\r\n\r\n  const animateProjectThumbnailImage = () => {\r\n    const translateY = `${(state.currentProjectIndex / projects.length) * -100}%`;\r\n    anime({\r\n      targets: projectThumbnailImageRef.current,\r\n      translateY,\r\n      easing: \"easeInOutQuad\",\r\n      duration: 1400\r\n    });\r\n  };\r\n\r\n  const animateProjectDescription = () => {\r\n    console.log(\"animateProjectDescription\")\r\n    const isLandscape = window.innerWidth > window.innerHeight;\r\n    if (isLandscape) {\r\n      anime({\r\n        targets: projectDescriptionRef.current,\r\n        translateX: [\"100%\", 0],\r\n        opacity: [0, 1],\r\n        easing: \"easeInOutQuad\",\r\n        delay: 200,\r\n        duration: 1200\r\n      });\r\n    } else {\r\n      anime({\r\n        targets: projectDescriptionRef.current,\r\n        translateY: [\"-100%\", 0],\r\n        opacity: [0, 1],\r\n        easing: \"easeInOutQuad\",\r\n        delay: 300,\r\n        duration: 900\r\n      });\r\n    }\r\n  };\r\n\r\n  const animateNavigation = () => {\r\n    anime({\r\n      targets: navigationRef.current,\r\n      opacity: [0, 1],\r\n      easing: \"easeOutCubic\",\r\n      delay: 400,\r\n      duration: 1000\r\n    });\r\n  };\r\n\r\n  const animateArrowsButton = type => {\r\n    const [target, translateX] =\r\n      type === ARROW_TYPE.PREV\r\n        ? [prevButtonSvgRef.current, [0, -6]]\r\n        : [nextButtonSvgRef.current, [0, 6]];\r\n    anime.remove(target);\r\n    let translate = anime({\r\n      target,\r\n      translateX,\r\n      easing: \"easeOutSine\",\r\n      duration: 800\r\n    });\r\n    translate.reverse();\r\n    translate.play();\r\n  };\r\n\r\n  return (\r\n    <div id=\"projects\">\r\n      <section>\r\n        <div className=\"text\">\r\n          <div\r\n            ref={projectDescriptionRef}\r\n            className=\"wrap\"\r\n          >\r\n            <h1>{projects[state.currentProjectIndex].name}</h1>\r\n            <p>{projects[state.currentProjectIndex].description}</p>\r\n            <div className=\"links\">\r\n              {projects[state.currentProjectIndex].links.map((link, i) => (\r\n                <a\r\n                  key={i}\r\n                  href={link.href}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {link.text}\r\n                </a>\r\n              ))}\r\n            </div>\r\n            <div className=\"tags\">\r\n              {projects[state.currentProjectIndex].tags.map(tag => (\r\n                <span key={tag}>{tag}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"thumbnail\">\r\n          <div\r\n            ref={projectThumbnailRef}\r\n            className=\"clip\"\r\n          >\r\n            <div\r\n              ref={projectThumbnailImageRef}\r\n              className=\"container\"\r\n            >\r\n              {projects.map((project, i) => (\r\n                <img\r\n                  key={project.name}\r\n                  src={`/static/images/${project.name}.png`}\r\n                  alt={project.name}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          ref={navigationRef}\r\n          className=\"arrows\"\r\n        >\r\n          <button\r\n            ref={prevButtonRef}\r\n            type=\"button\"\r\n            onClick={prevProject}\r\n            aria-label=\"previous project\"\r\n          >\r\n            <svg\r\n              ref={prevButtonSvgRef}\r\n              stroke=\"currentColor\"\r\n              fill=\"currentColor\"\r\n              strokeWidth=\"0\"\r\n              viewBox=\"0 0 256 512\"\r\n              height=\"1em\"\r\n              width=\"1em\"\r\n            >\r\n              <path d=\"M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z\" />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            ref={nextButtonRef}\r\n            type=\"button\"\r\n            onClick={nextProject}\r\n            aria-label=\"next project\"\r\n          >\r\n            <svg\r\n              ref={nextButtonSvgRef}\r\n              stroke=\"currentColor\"\r\n              fill=\"currentColor\"\r\n              strokeWidth=\"0\"\r\n              viewBox=\"0 0 256 512\"\r\n              height=\"1em\"\r\n              width=\"1em\"\r\n            >\r\n              <path d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <style jsx>{`\r\n        #projects {\r\n          width: 100%;\r\n          align-self: center;\r\n          display: flex;\r\n          align-items: stretch;\r\n          margin: 30px 0;\r\n        }\r\n\r\n        section {\r\n          position: relative;\r\n          width: 100%;\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          justify-content: center;\r\n          align-items: stretch;\r\n        }\r\n\r\n        .text {\r\n          width: calc(50% - 50px);\r\n          display: flex;\r\n          align-items: center;\r\n          margin: 0 50px 0 0;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .wrap {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: flex-end;\r\n          width: 100%;\r\n          margin: 0 0 50px 0;\r\n          text-align: right;\r\n          opacity: 0;\r\n        }\r\n\r\n        h1 {\r\n          margin: 0;\r\n          font-size: 8rem;\r\n          font-family: Raleway, sans-serif;\r\n          text-transform: capitalize;\r\n          line-height: 1;\r\n        }\r\n\r\n        p {\r\n          margin: 20px 0 0 0;\r\n        }\r\n\r\n        .links {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          justify-content: flex-end;\r\n          align-items: center;\r\n          margin: 10px 0;\r\n        }\r\n\r\n        .links a {\r\n          margin: 0 0 10px 20px;\r\n          color: #fff;\r\n          text-decoration: none;\r\n          border-bottom: 1px dashed #f5359e;\r\n        }\r\n\r\n        .links a:first-child {\r\n          margin-left: 0;\r\n        }\r\n\r\n        .tags {\r\n          display: flex;\r\n          flex-direction: row;\r\n          flex-wrap: wrap;\r\n          justify-content: flex-end;\r\n          align-items: center;\r\n          font-size: 1.6rem;\r\n        }\r\n\r\n        .tags span {\r\n          line-height: 1;\r\n          margin: 0 0 5px 10px;\r\n          font-style: italic;\r\n        }\r\n\r\n        .tags span:first-child {\r\n          margin-left: 0;\r\n        }\r\n\r\n        .thumbnail {\r\n          width: 50%;\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          align-items: center;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .clip {\r\n          position: relative;\r\n          width: 80%;\r\n          overflow: hidden;\r\n          transform: translateX(-101%);\r\n        }\r\n\r\n        .clip::before {\r\n          content: \"\";\r\n          display: block;\r\n          padding-bottom: 100%;\r\n        }\r\n\r\n        .container {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        img {\r\n          width: 100%;\r\n          height: auto;\r\n        }\r\n\r\n        .arrows {\r\n          position: absolute;\r\n          right: calc(50% + 50px);\r\n          bottom: 0;\r\n          display: flex;\r\n          opacity: 0;\r\n        }\r\n\r\n        .arrows button {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 2px;\r\n          background-color: rgba(255, 255, 255, 0.15);\r\n          cursor: pointer;\r\n          color: #fff;\r\n          font-size: 1.8rem;\r\n          outline: none;\r\n          transition: 0.3s;\r\n        }\r\n\r\n        .arrows button:hover,\r\n        .arrows button:focus {\r\n          background-color: rgba(255, 255, 255, 0.3);\r\n        }\r\n\r\n        .arrows button:hover path,\r\n        .arrows button:focus path {\r\n          fill: rgba(255, 255, 255, 1);\r\n        }\r\n\r\n        .arrows button path {\r\n          fill: rgba(255, 255, 255, 0.7);\r\n          transition: 0.3s;\r\n        }\r\n\r\n        .arrows button:last-child {\r\n          margin-left: 10px;\r\n        }\r\n\r\n        @media (max-width: 1400px) {\r\n          .clip {\r\n            width: 75%;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 1400px) and (orientation: landscape) {\r\n          h1 {\r\n            font-size: 5vw;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 1400px) and (orientation: portrait) {\r\n          #projects {\r\n            margin: 30px 0;\r\n          }\r\n\r\n          h1 {\r\n            font-size: 5rem;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 1024px) {\r\n          .clip {\r\n            width: 100%;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 1024px) and (orientation: landscape) {\r\n          .clip {\r\n            width: 100%;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 1024px) and (orientation: portrait) {\r\n          section {\r\n            flex-direction: column;\r\n            align-items: center;\r\n          }\r\n\r\n          .text {\r\n            width: 100%;\r\n            margin: 30px 0 0 0;\r\n            order: 2;\r\n          }\r\n\r\n          .wrap {\r\n            align-items: center;\r\n            text-align: center;\r\n            margin-bottom: 30px;\r\n          }\r\n\r\n          .links,\r\n          .tags {\r\n            justify-content: center;\r\n          }\r\n\r\n          .links a {\r\n            margin-left: 10px;\r\n            margin-right: 10px;\r\n          }\r\n\r\n          .tags span {\r\n            margin-left: 5px;\r\n            margin-right: 5px;\r\n          }\r\n\r\n          .thumbnail {\r\n            width: 100%;\r\n            justify-content: center;\r\n            order: 1;\r\n          }\r\n\r\n          .arrows {\r\n            position: static;\r\n            order: 3;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 767px) {\r\n          section {\r\n            flex-direction: column;\r\n            align-items: center;\r\n          }\r\n\r\n          .text {\r\n            width: 100%;\r\n            margin: 30px 0 0 0;\r\n            order: 2;\r\n          }\r\n\r\n          .wrap {\r\n            align-items: center;\r\n            text-align: center;\r\n            margin-bottom: 30px;\r\n          }\r\n\r\n          h1 {\r\n            font-size: 4rem;\r\n          }\r\n\r\n          .thumbnail {\r\n            width: 100%;\r\n            justify-content: center;\r\n            order: 1;\r\n          }\r\n\r\n          .arrows {\r\n            position: static;\r\n            order: 3;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 767px) and (orientation: portrait) {\r\n          .clip {\r\n            width: 100%;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAhBA;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApFA;AAAA;AAAA;AAsXA;AACA;AACA;;;;A","sourceRoot":""}